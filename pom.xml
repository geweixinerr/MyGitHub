<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com</groupId>
	<artifactId>MySpring</artifactId>
	<version>${project.release.version}</version>
	<name>Spring Project</name>
	<description>我的Spring Maven项目</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- 如果想发布到snapshot仓库中，则需要在版本号后加上-SNAPSHOT(注意这里必须是大写) -->
		<project.release.version>0.0.1-SNAPSHOT</project.release.version>
		<spring.version>4.3.21.RELEASE</spring.version>
	</properties>

	<dependencies>
		<!-- Spring依赖 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- 2.Spring dao依赖 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- 3.Spring web依赖 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- 4.Spring test依赖：方便做单元测试和集成测试 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
			<version>1.8.23.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.9.3</version>
		</dependency>

		<!-- redis客户端另一种选择 -->
		<dependency>
			<groupId>io.lettuce</groupId>
			<artifactId>lettuce-core</artifactId>
			<version>5.1.8.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>3.11.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.8.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.2</version>
		</dependency>

		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.3</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.11</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>

		<!-- logback start -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>

		<dependency>
			<groupId>org.logback-extensions</groupId>
			<artifactId>logback-ext-spring</artifactId>
			<version>0.1.5</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.25</version>
		</dependency>
		<!-- logback end -->

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>3.2.8</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>

		<!-- 线程安全的,更强大的日期API -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.10</version>
		</dependency>

		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
			<version>4.1.31.Final</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling</artifactId>
			<version>2.0.6.Final</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling-serial</artifactId>
			<version>2.0.6.Final</version>
			<!-- <scope>test</scope> -->
		</dependency>

		<dependency>
			<groupId>de.ruedigermoeller</groupId>
			<artifactId>fst</artifactId>
			<version>2.57</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>6.0.14.Final</version>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.logging</groupId>
					<artifactId>jboss-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>

		<!-- 配合hibernate-validator,开发注解 -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
			<version>3.0.1-b10</version>
		</dependency>

		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>3.6.1</version>
		</dependency>

		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom2</artifactId>
			<version>2.0.6</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.18</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
			<version>2.6.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>28.0-jre</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.uuid</groupId>
			<artifactId>java-uuid-generator</artifactId>
			<version>3.1.5</version>
		</dependency>

		<dependency>
			<groupId>com.github.stephenc.eaio-uuid</groupId>
			<artifactId>uuid</artifactId>
			<version>3.4.2</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.60</version>
		</dependency>

		<!-- 导出jmeter依赖包的maven命令[dependency:copy-dependencies -DoutputDirectory=lib] -->
		<dependency>
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter_core</artifactId>
			<version>5.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter_java</artifactId>
			<version>5.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>transmittable-thread-local</artifactId>
			<version>2.10.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>2.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
			<version>2.3.0</version>
		</dependency>

		<!-- 硬件采集开源工具 -->
		<dependency>
			<groupId>org.fusesource</groupId>
			<artifactId>sigar</artifactId>
			<version>1.6.4</version>
		</dependency>

		<!-- 加密工具 -->
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt</artifactId>
			<version>1.9.3</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.8</version>
			<scope>provided</scope>
		</dependency>

		<!-- Java AST 语法树 [start] -->
		<dependency>
			<groupId>com.github.javaparser</groupId>
			<artifactId>javaparser-symbol-solver-core</artifactId>
			<version>3.14.9</version>
		</dependency>

		<dependency>
			<groupId>com.github.javaparser</groupId>
			<artifactId>javaparser-core</artifactId>
			<version>3.14.9</version>
		</dependency>

		<dependency>
			<groupId>com.github.javaparser</groupId>
			<artifactId>javaparser-core-serialization</artifactId>
			<version>3.14.9</version>
		</dependency>

		<!-- Java AST 语法树 [end] -->

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.9</version>
		</dependency>

		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>3.4.2</version>
		</dependency>

		<dependency>
			<groupId>cn.raptor</groupId>
			<artifactId>raptor-core</artifactId>
			<version>1.1</version>
		</dependency>

	</dependencies>

	<!-- 添加项目jdk编译插件 -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<resources>
						<resource>
							<directory>src/main/resources</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<filtering>true</filtering>
							<!-- 排除文件 -->
							<excludes>
								<exclude>settings.xml.bak</exclude>
							</excludes>
						</resource>
					</resources>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<forkMode>once</forkMode>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<excludes>
					</excludes>
				</configuration>
			</plugin>
			<!-- tomcat:deploy(部署一个web war包) tomcat:reload(重新加载web war包) tomcat:start(启动tomcat) 
				tomcat:stop(停止tomcat) tomcat:undeploy(停止一个web war包) tomcat:run(启动嵌入式tomcat,并启动当前项目) -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<port>9090</port>
					<path>/webApp</path>
					<uriEncoding>UTF-8</uriEncoding>
					<charset>UTF-8</charset>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 打包插件 -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> 
				<version>3.0.0</version> <configuration> <archive> <manifest> <mainClass>com.vvvtimes.server.MainServer</mainClass> 
				</manifest> </archive> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> 
				</descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> 
				<phase>package</phase> <goals> <goal>single</goal> </goals> </execution> 
				</executions> </plugin> -->
		</plugins>

		<!-- 与maven-resources-plugin插件功能一致 -->
		<!-- <resources> <resource> <directory>src/main/resources</directory> <includes> 
			<include>**/*</include> </includes> <filtering>true</filtering> <excludes> 
			<exclude>settings.xml.bak</exclude> </excludes> </resource> </resources> -->

		<!-- 资源过滤替换属性值,这里的filters与<profile>的filter意思一样，都是指属性文件地址. -->
		<!-- <filters> <filter>deploy/dev.properties</filter> </filters> -->

		<finalName>MySpring Project</finalName>
	</build>

	<!-- 部署项目 -->
	<distributionManagement>
		<repository>
			<id>my-deploy-release</id>
			<name>本地Maven Nexus仓库</name>
			<url>http://127.0.0.1:8081/repository/maven-releases/</url>
			<layout>default</layout>
		</repository>

		<snapshotRepository>
			<id>my-deploy-snapshot</id>
			<name>本地Maven Nexus仓库</name>
			<url>http://127.0.0.1:8081/repository/maven-snapshots/</url>
			<layout>default</layout>
		</snapshotRepository>
	</distributionManagement>

	<!-- release版本发布,-P release -->
	<profiles>
		<profile>
			<id>release</id>
			<properties>
				<project.release.version>2.0</project.release.version>
			</properties>
		</profile>

		<profile>
			<id>dev</id>
			<build>
				<filters>
					<filter>deploy/dev.properties</filter>
				</filters>
			</build>
		</profile>

		<profile>
			<id>sit</id>
			<build>
				<!-- resources和filters，maven中的这两个属性通常是搭配起来使用的，filter这里可以理解为筛选器或者填充器。 
					filters里面可以配置多个filter，但是会以最后一个为准，所以一般只配置一个filter -->
				<filters>
					<filter>deploy/sit.properties</filter>
				</filters>
			</build>
		</profile>

		<!-- 编译JDK1.7 -->
		<profile>
			<id>buildJDK1.7</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.8.0</version>
						<configuration>
							<source>1.7</source>
							<target>1.7</target>
							<encoding>UTF-8</encoding>
							<!-- 可以不加 <verbose>true</verbose> <fork>true</fork> <executable>c:\Java\jdk1.7.0_80\jdk1.7.0_80\bin\javac</executable> -->
						</configuration>
					</plugin>
					<!-- 执行BAT命令 -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2</version>
						<executions>
							<execution>
								<id>执行Bat批处理命令,install任务阶段</id>
								<!-- 插件执行阶段(install) -->
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>../${project.parent.artifactId}/deploy.bat</executable>
								</configuration>
							</execution>
							<!-- 替换资源文件 -->
							<execution>
								<id>编辑周期中替换资源文件...</id>
								<!-- 在编译执行阶段替换 -->
								<phase>generate-sources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<!-- 具体执行配置 -->
								<configuration>
									<tasks>
										<echo>替换资源进行中...</echo>
										<delete file="xxURL/XX.war" />
										<copy file="../xxxURL/xxx.xml" tofile="../xxxURL/xxx.xml"
											overwrite="true" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- 构建并移动war文件到tomcat webapps目录下 -->
		<profile>
			<id>buildWar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>执行War包拷贝...</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<!-- 这样也行 -->
								<configuration>
									<tasks>
										<echo>拷贝资源进行中...</echo>
										<!-- 删除文件 -->
										<delete
											file="d:\server\apache-tomcat-7.0.90\webapps\xxx.war" />
										<!-- 删除目录,包含空目录 -->
										<delete
											dir="d:\server\apache-tomcat-7.0.90\webapps\xxx目录"
											includeemptydirs="true" />
										<copy file="d:\eclipse workspace\project\target\xxx.war"
											tofile="d:\server\apache-tomcat-7.0.90\webapps\xxx.war"
											overwrite="true" />
									</tasks>
								</configuration>
							</execution>
						</executions>
						<!-- 这样也行 <configuration> <tasks> <echo>拷贝资源进行中...</echo> <delete file="d:\server\apache-tomcat-7.0.90\webapps\xxx.war" 
							/> <delete dir="d:\server\apache-tomcat-7.0.90\webapps\xxx" includeemptydirs="true"/> 
							<copy file="d:\eclipse workspace\project\target\xxx.war" tofile="d:\server\apache-tomcat-7.0.90\webapps\xxx.war" 
							overwrite="true"/> </tasks> </configuration> -->
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>